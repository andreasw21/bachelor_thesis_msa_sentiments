ID;Source;Creation Date;Content;Sentiment
10399681;HackerNews;2015-10-16;we should grab lunch to chat about this.simply put you split a microservice when you need to split teams.microservices aren't a solution to a technical problem they're a solution to a socialorganization problem described by conway's law.;0
10347559;HackerNews;2015-10-07;if you've built your microservices on top of multiple databases then you could have built the same features in a monolith on top of multiple databases. what helped scaling is splitting the database not splitting the application.;0
10342626;HackerNews;2015-10-06;maybe every module in a monolith could also be considered a microservice with extremely fast networking and an extremely terse remote interface specification language.;0
10340960;HackerNews;2015-10-06;again this is something that is independent of microservices. if you have a modular mono codebase then one team can easily deploy commits that only touch their module.;0
10340944;HackerNews;2015-10-06;for sure there's a buzzwagon and true microservices are just a kind of soa which itself wasn't new etc.what's different this time round is that microservice hosting should be much icheaperi.when you're cheap enough all sins are forgiven.;0
10340703;HackerNews;2015-10-06;there are other options like spend the same resources building a monolith that is not spaghetti. and it is certainly possible for the sum of microservices to become spaghetti.;0
10340528;HackerNews;2015-10-06;at least with microservices i know the interface is all i have to worry about.you wrap your code inside a reusable library if you want to encapsulate it and expose only a small public interface. you don't start a new service for that.;0
10340508;HackerNews;2015-10-06;the other benefit of a microservice is you can understand it. you can have the entire thing in your head. it's easier to maintain. with a monolith good luck.;0
10339776;HackerNews;2015-10-06;really? it's ten times as much work to implement microservices?no it says the servers have to do tenfold more work not you to implement them. whether that's correct or not is another discussion.;-1
10339286;HackerNews;2015-10-06;martin fowler identified a lot of the same tradeoffs in this video one benefit i haven't seen mentioned yet microservices are effective at reducing the mental page size when working on any particular part of the system.;0
10339039;HackerNews;2015-10-06;i think one thing that microservice and some other models correctly point to is that tiers of the traditional 2tier 3tier and ntier architectures aren't universal and that their are good reasons for some systems to have components that are arranged in some manner other than stacked fronttoback layers.;0
10339026;HackerNews;2015-10-06;i always though that microservices would be helpful if you had frequent transient programmers like contractors. where you can onboard a new person faster by having them focus an a much smaller view of the system.;0
10339009;HackerNews;2015-10-06;the micro in microservices is the issue. it reminds me of the nosql movement. the truth is that everyone has a multitiered architecture. the only question is how many tiers you need. it's always more than 1.;0
10338961;HackerNews;2015-10-06;looks like you can afford to have monolith and don't worry about this microservice thing p.;1
10338798;HackerNews;2015-10-06;boundaries have problems in monoliths as well can't really imagine it would be any easier with microservices.;0
10338711;HackerNews;2015-10-06;when you were evaluating amqp did you consider a lightweight rpc system like nameko ?;0
10338624;HackerNews;2015-10-06;what you're describing is an operating system.replace microservices with microkernel and you can read the torvaldstannebaum debate instead 1;0
10338597;HackerNews;2015-10-06;that's somewhat disingenuous. historically all software has been monolith first and has only adopted an soa out of need. the microservice mindset is relatively new and we're not really going to see it mature for another year or few.;-1
10338580;HackerNews;2015-10-06;do you think you can do microservices without devops? i see the correlation you're making but i think a more traditional organizational structure can work fine.;0
10338473;HackerNews;2015-10-06;very true but i've heard modularization touted as a benefit of microservices many times as if it's exclusive. you can get modularization as a firstclass feature in your favorite language and almost for free!;1
10338414;HackerNews;2015-10-06;the main benefit of microservices is that each team can ideployi their service independently.this is really useful to reduce the level of required of interaction and pressure between teams.;0
10338296;HackerNews;2015-10-06;you're right but sometimes modules ! servicesyour database is a service. you can't use multiple dbs depending on the situation.if it can be replaced by multiple instances of the same module than yes creating a microservice is probably stupid;-1
10338275;HackerNews;2015-10-06;yep when evaluating whether to go with more microservices we looked into rabbitmq for the transport and protobufs for serialization. in the end we decided to roll the existing microservices into the monolith which was by far the better decision as we didn't need the scalability.;0
10338214;HackerNews;2015-10-06;as others have already pointed out you don't need microservices to achieve a good modularization of your code. then have each team work on a different module with clearly defined apis between them. no need to separate them with http calls.;0
10338184;HackerNews;2015-10-06;rule of thumb divide number of fulltime backend engineers by 5 and you get ideal number of microservices .too many microservices is a complexity mess too little means you have a monolith that is hard to iterate on.;0
10338126;HackerNews;2015-10-06;yeah which just goes to show how microservices advocates understand programming.;0
10338118;HackerNews;2015-10-06;not only that the microservices is just sunrpc corba reborn and we all know how they worked out.;0
10337912;HackerNews;2015-10-06;i love his little worflow diagram embedded in the article;1
12146612;HackerNews;2016-07-22;...so what is a new concept regarding microservices?i don't see anything new... new tools granted. then again there's new tools being produced every day for every architectural style.;0
12141413;HackerNews;2016-07-22;yeah we were debating about whether i should write a post about the end of servers instead of the end of microservices. i thought we'd get a livelier discussion with microservices but i totally agree that they are already getting to be yesterday's buzz word.;0
12138251;HackerNews;2016-07-21;there is software and concepts around managing microservices that didn't exist before and so on. nothing can be new when you use such a vague way of comparing things. there were electric cars in the 1800s why talk about tesla?;0
12138190;HackerNews;2016-07-21;microservices aren't distributed objects;0
12137936;HackerNews;2016-07-21;every generation's microlith is the next generation's monolith.for this generation the end of microservices will be when we can look at a cluster as one big unit and deploy a microlithic monolith on it.for the next generation who knows how they will slice it up.;0
12137230;HackerNews;2016-07-21;microservices are for organizations that can't seem to enforce encapsulation at the object level.devs not creating good interfaces in oo design? stick them on a different server that ought to show them. of course now your spaghettified object hierarchies are spaghettified api call hierarchies.;0
12136311;HackerNews;2016-07-21;the discussion about monoliths vs. microservices reminds me about knuth's 10pages of pascal code vs. mcilroy's 6command shell pipeline;0
12135738;HackerNews;2016-07-21;the replacability is usually much better due to being forced to define sharp boundaries with clear interfacesif by sharp boundaries with clear interfaces you mean api specification how is it a microservice thing? i thought the benefits of microservices lie in behindthescenes details.;0
12135696;HackerNews;2016-07-21;but that is the thing.it just means that instead of using the language features and creating clean interfaces across modules they were witting spaghetti code.with microservices they get to write spaghetti rest calls with the added fun of distributed computing failures.;-1
12135553;HackerNews;2016-07-21;with some work you can have the some behaviour but the microservice is also about the data like user ids and passwords for a login microservice.;0
12135541;HackerNews;2016-07-21;i had the feeling that microservices would add too much of complexity but with faas this is canceled out by the fact that almost all server management complexity is handled by a different company.;0
12135421;HackerNews;2016-07-21;not as i understand microservices. a library would be something that's compiled or included in to your application code. a microservice is a separate process that the application communicates with over a protocol eg http.;0
12135376;HackerNews;2016-07-21;i agree with you. in my defense people who want microservices are generally asking for developer autonomy but just using technical language to do it rather than managerial.;0
12135344;HackerNews;2016-07-21;sounds kind of like what i would do except i would use a database table controller for each of the things you consider a microservice.;0
12135254;HackerNews;2016-07-21;i also don't see how microservices are more reusable.however the ireplacabilityi is usually much better due to being forced to define sharp boundaries with clear interfaces.;0
12135208;HackerNews;2016-07-21;you are not getting more reusability from a bunch of microservices compared to one big service i don't see where you got that?;-1
12135027;HackerNews;2016-07-21;you got the google part wrong. google is all in on microservice architecture and has over a decade of experience doing it. there is not some gigantic google.exe program. perhaps you have heard that google uses a single source code repo and drew an incorrect conclusion.;0
12134866;HackerNews;2016-07-21;if that's the case i'd argue we're conflating software development management with software engineering execution. it's illogical to assert that utilizing microservices implies entirely forgoing centralization.;0
12134841;HackerNews;2016-07-21;i think this is a smaller evolution than microservices non microservices.... as others have pointed out the real discussion is autonomy versus centralised control.;0
12134222;HackerNews;2016-07-21;not to seem naive but i work with a lot with microservices and i've never heard of lightstep...... follow up what's everyones opinion on this?;0
12134110;HackerNews;2016-07-21;i don't think they are. i would be surprised if 10 of new code right now was coded in microservices.;0
12134068;HackerNews;2016-07-21;they have the word microservice on their homepage d;0
12134062;HackerNews;2016-07-21;maybe a more appropriate title could be 'microservices are the norm';0
12601669;HackerNews;2016-09-28;if your product or project is not or has services then it does not need such a thing called microservices.;0
12519490;HackerNews;2016-09-17;you need almost none of that scary list to start building microservices. lambda functions can be created in minutes even in ui console. and they have almost everything from that scary list by default.lots of people are still in denial regarding microservices...;-1
12518261;HackerNews;2016-09-17;one of the ways we managed to get a microservices system on prem vsphere or openstack is to configure it with a system that can handle the whole provisionbuildconfiguredeploy as a single unit .. though the learning curve was steep.;0
12515747;HackerNews;2016-09-16;microservices embody the idea that there might not be a unified domain model across the organisation.;0
12513205;HackerNews;2016-09-16;if this person used microservices perhaps their site wouldn't be down right now...;0
12512963;HackerNews;2016-09-16;i'll go against the majority or vocal minority? and say i like your title it's good because it attracts attention i wouldn't read the post if it were a understand the implications of having a microservice architecture or whatever others recommend.;0
12512824;HackerNews;2016-09-16;my conclusion as well. in my mind i call them 'airgapped modules'.;0
12512720;HackerNews;2016-09-16;yes. for me shared state in the linux kernel is like a shared database between microservices. it makes life way easier is faster but you need to be careful you don't introduce subtle bugs.;0
12512163;HackerNews;2016-09-16;in my experience once microservice it's very hard to run the whole system in local environment. it's nearly impossible to overview the system anymore.;-1
12511681;HackerNews;2016-09-16;sounds like your company built a distributed monolith when they thought they were building microservices.;0
12511528;HackerNews;2016-09-16;i think microservices can work well but also agree that it's easier to start with a monolith. it's hard to go out and create perfect microservices. in my experience they emerge from the problem much like how an amoeba gets big and breaks off at natural points.;0
12511399;HackerNews;2016-09-16;you use microservices when your project expands beyond the monkeysphere number where everyone knows everyone else.it allows teams to work in their own world without having to coordinate as much with other teams or people.microservices are good for large companies. if you're small you don't need them.;0
12511179;HackerNews;2016-09-16;that's pretty spot on. i once made an abbreviated flowchart of the above for my microservices article i urge everyone to use it to decide whether they really need microservices or not.;1
12510962;HackerNews;2016-09-16;that's one thing i've always thought when people claimed microservices followed the unix philosophy. unix doesn't even follow that philosophy it's a monolith! yet it's also a modular system which is possible without being either a microkernel or microservices.;0
12510814;HackerNews;2016-09-16;i think it does carry those lessons but most languages are incredibly bad at enforcing modularity. monoliths make it far too easy to cheat and dynamically typed languages are typically worse here.microservices then just forces on you the modularity your language should have already given you.;-1
12510705;HackerNews;2016-09-16;i guess in my head it's also eliminating a lot of code bloat using microservices. just my opinion though.;0
12510606;HackerNews;2016-09-16;i heard about microservices about a year ago and now it said the hype has ended before i even noticed? admittedly i'm not in the loop and it's hard to track all the trends from outside.;-1
12510419;HackerNews;2016-09-16;a word which totally not carries lessons learnt from microservices vs monoliths. but using that name is fine by me i'm not trying to define other people world just sharing mine.;0
12510395;HackerNews;2016-09-16;i dunno. given the fuzzy definition of microservice i tend to think of otp applications as logical microservices... ones you can even build a monolith or distributed monolith out of if you want.;0
12510307;HackerNews;2016-09-16;instead of microservices i split my projects in tons of libraries and think of them as products enforcing a well thought of and consistent api usage api not http one. i call that an atomized monolith.there's already a term for that modularity.;0
12510054;HackerNews;2016-09-15;i see microservices as responsibility deduplication in a organizationtraversalwide.aka soa. why call it microservice ?;0
12509989;HackerNews;2016-09-15;you dont need to introduce a network boundary as an excuse to write better codeabsolutely this!microservices is just decoupling by another name.... and you do not need a networkboundary to enforce this.monolithic code can also be nicely decoupled too.;0
12509967;HackerNews;2016-09-15;we ship a microservicesbased product onpremises. you can do it but it's a heck of a lot of work. plus you don't get any of the benefits microservices might bring in a cd scenario you can't do cd over an airgap.;-1
12509926;HackerNews;2016-09-15;that's a key point it's easier to do things wrongpoorly on microservices.;0
12509844;HackerNews;2016-09-15;why would someone push for those 5 thruths? the point of microservices is to ease ops life so that deploying is less of a big banglike event and more geared towards incremental and local evolutions.;0
12509313;HackerNews;2016-09-15;because scaling a monolith is not a realistic approach. every single monolith i have worked on has been refactored as domain specific microservices and in every case it was a resounding success.;1
12509219;HackerNews;2016-09-15;i think it's more of whether or not you need that scale. if you don't have the resources for it to make sense to optimize everything like that you're probably wasting your time iandi making things slower by pursuing microservices.;-1
12509173;HackerNews;2016-09-15;my approach is to design like microservices and develop like a monolith. thinking about microservices will force you to define module their boundary and interfaces. a monolith will simplify deployment refactoring. once your code matures you'll know if any microservice has to be taken out and deployed seperately.;0
12509025;HackerNews;2016-09-15;one suggestion i would make if you are going to use microservices is to consider using grpc rather than rest. you can save yourself a lot of the hassle involved in the communication that way and make things quite a bit faster.;0
12509023;HackerNews;2016-09-15;the title should be i've never implemented microservices properly so you should avoid them.;-1
12508941;HackerNews;2016-09-15;raises some good points but i think the title isn't really correct. it's not don't use microservices it's more about making sure you understand the implications of having a microservice architecture and making sure it's not an excuse for not writing a monolith or soa properly.;0
13180565;HackerNews;2016-12-15;microservices don't solve the volume problem a monolith can have multiple to deployments to handle volume.;0
13172233;HackerNews;2016-12-14;i think if you are not capable of designing a decent api you won't be able to design good microservices either. both require some level of competence and discipline.;0
13172205;HackerNews;2016-12-14;but your networked api is language agnostic your library is not.it depends but microservices are in many cases better where your application is large. examples aws uber.monolith is better if your application smaller and cover just single problem. examples slack trello jira;0
13171992;HackerNews;2016-12-13;the author addresses building internal software as monolith vs. microservices not the use of others' services as part of one's monolithmicroservice.;0
13171065;HackerNews;2016-12-13;not really. that section is about simplicity. microservices can be more complicated but they shorten the feedback loop and reduce handoffs.;0
13168445;HackerNews;2016-12-13;rather than responding to each of these points which are valid points here's a blog post i wrote for codeship a while back on microservices with heroku that dives into a lot of the tradeoffs from an organizational and infrastructure standpoint.;0
13168420;HackerNews;2016-12-13;you'll find most microservices experts will say microservices is a specific implementation of soa.a lot of the early soa architectures used huge middleware applications. modern microservices keeps the stuff inside the microservices themselves.;0
13168367;HackerNews;2016-12-13;the problem is if you need 100000 lines of code for your login you can probably break that up. ex employee login vs. contractor login.so where you might think microservices others may be thinking of your monolithic login service.;0
13168169;HackerNews;2016-12-13;i think the popular counterpoint has been microservices forces consideration of a good api because you are now on the network even if its just localhost.;0
13167618;HackerNews;2016-12-13;i've worked with microservices in the last year and a half and i partially agree with the author. my current approach is that of logical microservices running within the same processruntime but with a languageindependent api pure json for example.;1
13167583;HackerNews;2016-12-13;fallacy 4 simple for engineers leads to not my problem syndrome.i've found the exact opposite happens with microservices. with welldefined interfaces and apis i know exactly where things are breaking and can pinpoint the service and code more quickly.;0
13167375;HackerNews;2016-12-13;not sure i agree with the article. in a nutshell microservices enable the organization with rusted engineering practices to roll forward. initially it sounds like a hype but people will reap the benefits once they start building them.;-1
13434844;HackerNews;2017-01-19;no not at all.the only difference i noticed with respect to rube goldberg what you call microservices systems and coupling is that tight coupling between components of rube goldberg systems was much more painful particularly debugging across multiple service boundaries.;-1
13434456;HackerNews;2017-01-19;it can go both ways. if you mess up modification of the microservice such that it breaks other services that relied upon it you quickly get into ceremony that a small team might struggle with. a monolith might have had the problem solved faster.;0
13433990;HackerNews;2017-01-19;better you can do it without a restart is you can serialise current state. that also enforces discipline in defining such state.microservices are only a step ahead.that said in many cases the cost of a full restart can be accepted.;0
13433638;HackerNews;2017-01-19;having loosely coupled microservices has benefits for maintenance as well as scaleability. if you are quickly iterating on a product and have it up in a rough state then you can easily work on seperate parts without having to worry about effecting the whole.;0
13433119;HackerNews;2017-01-19;tbh microservices do a good job of making you much more dependent on your tools and selecting the wrong tool for the job won't become clear until you've used that tool for years.;0
13432579;HackerNews;2017-01-19;i have seen microservices be the death of a lot of startups corporations. proceed with caution.;0
13431774;HackerNews;2017-01-19;i did not mean microservice as in just make it many apps!. i meant as do not share databases and expose everything as apis.it helps cognitive load because such apps can be reasoned about without reading code elsewhere.;0
13431753;HackerNews;2017-01-19;i tend to try to write monolithic services in such a way that they icouldi be broken up into microservices if that were ever desired.i don't go too far with this just avoid things like shared static state and other antipatterns.;0
13431045;HackerNews;2017-01-18;hi i'm happy to be posting anon right now. can someone eli5 the difference between libraries and packages and a microservice?;1
13430037;HackerNews;2017-01-18;if you need to change your microservice's api in a nonbackwards compatible way you have the exact same problem plus significant operational complexity.;-1
13429476;HackerNews;2017-01-18;one caveat is that if you need to fix a bug in your library in an apicompatible way you can't reach into all the codebases that are using your library. you can deploy a new version of the microservice though.;0
13428941;HackerNews;2017-01-18;i believe for small shops the real benefit of microservices is the logic split that forces good design and reduces cognitive load.you reap the scaling benefits way later if ever.;0
13428602;HackerNews;2017-01-18;yeah. if you're going to use languages methodologies and architectures without understanding and without evaluating them for how well they fit your situation many things will be painful. don't follow the fads whether methodologies agile architecture microservices languages or frameworks. iuse what's appropriate for what you need to do.i;0
13428435;HackerNews;2017-01-18;imicroservices probably reduces the asymptotic cost of scaling but add a huge constant factor.iif this were imediumi i'd highlight the hell out of that.that's so true and so nicely succinctly put it ought to be the reply to end every argument about whether microservices are good or bad.;1
13427761;HackerNews;2017-01-18;i don't do anything approaching microservices but a good ci setup combined with a good test suite is an absolute blessing that verges on a 'must have'.;1
13427556;HackerNews;2017-01-18;1 the best tool is useless if people can't avail of its power2 true. microservices are usually premature optimization3 true4 ci is a good idea regardless of using microservices or not5 you might elaborate this item;0
13427503;HackerNews;2017-01-18;i find microservices can help in just keep everything small and focused. i know you can do this with a monolith. but having a process boundary really enforces it.;0
13427244;HackerNews;2017-01-18;you're right though you should end most of your comments with for us.we've been burned by the microservice hype and it took a while for us to realize that most of the touted benefits are for larger organizations. these best practices rarely include organizational context.;-1
13963763;HackerNews;2017-03-27;nobody arrives at microservices unaware of their complexity and complications.i think the opposite is often true. there are developers that buy into microservice architecture without a full understanding of the complexities involved.;0
13963713;HackerNews;2017-03-27;it's not impossible. as a sibling comment says it usually just requires a bunch of adhoc scripts to make sure everything is running. this does get increasingly complex especially as microservices are written with different stacks but that's part of the tradeoff.;0
13963703;HackerNews;2017-03-27;one more point is that in your monolith you actually have the option of crossing module boundaries. you don't have that luxury with microservices unless you want to introduce xa god bless you. so you better get your boundaries right.;1
13963327;HackerNews;2017-03-26;i think microservices place a greater emphasis on dataencapsulation amp isolation wheres soa focused more on the rpcapi surface. i think this is just an emphasis difference though and not a hard separation;0
13963003;HackerNews;2017-03-26;be interested in if anyone has much experience in using an actor type model instead of microservices. things like akka.net orleans erlangs otp etc;0
13962940;HackerNews;2017-03-26;isolated internal state is part of the definition of microservices. it is not hard to find articles that assert this. taking that away may yield a better result but you no longer have microservices you have something else;0
13962857;HackerNews;2017-03-26;genserverstartlink3the original microservice;0
13962561;HackerNews;2017-03-26;and how that central 'data store service' is different than a single 'database service' rdbms or nosql crud that all microservices connect to and run there selectinsertupdatedeletecrud ops?other than api rest vs whatever binary rpc protocol it sounds very much like a standard database...;0
13962180;HackerNews;2017-03-26;isn't a microservice just a small application behind a network boundary? moving what might be a big ball of mud into smaller ones?;0
13961827;HackerNews;2017-03-26;in my own projects you can start up every microservice with a single command script.yes having sufficient tooling for microservices does consume resources.;0
13961807;HackerNews;2017-03-26;why does technical overhead take a backseat whenever a microservices vs monolith discussion comes up?i don't think it does but that's kind of off topic.in the real world setting up and maintaining microservices has huge technical overhead i'd estimate double that of the equivalent monolithic architecture.i agree.;0
13961765;HackerNews;2017-03-26;come on you can have million lines of code and still get binaries of few megabytes. if that counts as microservice then everything does.this is a frequent problem when discussing microservices nobody defines how large they actually are.;-1
13961737;HackerNews;2017-03-26;microservices is to soa as json over http apis are to rest apis. fundamentally the same goals but with a focus more on being a general description of a style rather than a specification for how it should be implemented.this is a doubleedged sword of course...;0
13961347;HackerNews;2017-03-26;if the alternative to microservices is a monolith and you can run the monolith locally then logically microservices can also be run locally. if it's difficult to run all the microservices locally then that's just a sign of weak tooling.;0
13961199;HackerNews;2017-03-26;shouldn't the goal be to do whatever provides the most value and builds your product or business the fastest? if you waste time with a microservice architecture where you could've done more faster with a monolithic app that seems like a poor use of time.;-1
14421704;HackerNews;2017-05-26;i blame monolithic microservices...;0
14420026;HackerNews;2017-05-25;this. for languages with a good module system it's almost trivial to use modules either inprocess e.g. monolithically or outofprocess exposed via http or some other network interface as microservices. then the discussion becomes about writing modular code rather than microservices.;0
14418284;HackerNews;2017-05-25;just like agile and vendorbased software solutions of the past it seems like microservices are following the same path. i've seen projects starting off with microservices because someone several pay grades above deemed it so. lots of resumedrivendevelopment done here.;0
14417519;HackerNews;2017-05-25;what size startup do you think is benefited by a microservices architecture?;0
14417485;HackerNews;2017-05-25;but if you make a modeling mistake in a monolith it's a little painful but if you make a modeling mistake with microservices it's excruciating.;-1
14417319;HackerNews;2017-05-25;here's on of the sources i see most referred to when talking about microservices. maybe this could help you to understand them.;0
14417249;HackerNews;2017-05-25;could anyone explain what microservices are? i'm still learning as a junior dev and haven't quite understood what this word means. how would you break down an existing monolith into smaller 'microservices'?;0
14416948;HackerNews;2017-05-25;this makes me wonder are there any systems that make it easy to build a modular monolith that can relatively easily be split into microservices in the future?erlang otp? comes to mind though i have very little experience with it so i could be off;0
14416842;HackerNews;2017-05-25;that's what i am thinking too. how are people who can't write decent libraries suddenly able to define microservices and their boundaries?;-1
14416586;HackerNews;2017-05-25;also refer to the handy flowchart i created in my post for judging whether you need microservices;0
14416575;HackerNews;2017-05-25;i agree with your first point but i find microservices which almost always means json in practice tend to lead to less well designed interfaces than monoliths in a welltyped i.e. mlfamily language.;0
14416498;HackerNews;2017-05-25;this is an oversimplification. microservices ! soa;0
14416083;HackerNews;2017-05-25;i my i i. sounds like you ireallyi don't need microservices.;-1
14415990;HackerNews;2017-05-25;in my experience the desire to move to microservices results in people going overboard when decomposing their monoliths. authentication services payment services comments service etc.;0
14415966;HackerNews;2017-05-25;tldr microservices is yet another religion.;-1
14415928;HackerNews;2017-05-25;i wish the author discussed microservices in the context of domains and models. if you model your application and find a distinct isolated domains then consider creating separate services for them.;0
14415910;HackerNews;2017-05-25;the issue is when you have multiple teams working on a monolith.i haven't seen a configuration of teams that doesn't screw up the monolith by creating spaghetti dependencies between the pieces. hence making the transition to microservices a multi year journey.;0
14415829;HackerNews;2017-05-25;i don't see how the size of any individual microservice matters for the scenario hinkley has outlined.;0
14415774;HackerNews;2017-05-25;typically you solve that through a rewrite followed by migration and depreciation. since the microservice is small you can ideally accomplish the rewrite in under a week.;0
14415759;HackerNews;2017-05-25;and if you find scaling microservices harder than a giant stateful monolith well then clearly you've done something wrong.monoliths don't have to be stateful anymore than a microservice does. stop arguing against strawmen. this is why this topic is maddening.;-1
14415710;HackerNews;2017-05-25;additionally if you're actually having issues with scaling microservices or using them reliably for some reason it's usually pretty easy to integrate two of them into a bigger piece. virtually always easier than extracting a new microservice from an existing monolith.;0
14415679;HackerNews;2017-05-25;microservices have their place but as often happens they were overhyped to be a solution to everything and for everybody... now the cooldown period begins...;-1
14415669;HackerNews;2017-05-25;this frankly adds nothing new to the conversation.and if you find scaling microservices harder than a giant stateful monolith well then clearly you've done something wrong.likewise local development should be far easier if you define your apis and contract boundaries properly.;-1
